image_config: &image_config

  # make sure to set your Docker Hub username and password in CircleCI, either as project-specific environment variables or as resources in your organization's org-global Context

  IMAGE_NAME: # name your image (no spaces please!)
  
  IMAGE_VERSION: # give your image a version number
  
  # NOTE: if you're modifying this config.yml file manually rather than using the included setup script, make sure you also add your IMAGE_NAME and IMAGE_VERSION to the `test_image` job (line 48)
  
  LINUX_VERSION: # options: DEBIAN_JESSIE, DEBIAN_STRETCH, UBUNTU_TRUSTY, UBUNTU_XENIAL
  
  RUBY_VERSION_NUM: # pick a version number from https://cache.ruby-lang.org/pub/ruby
  
  NODE_VERSION_NUM: # pick a version number from https://nodejs.org/dist
  
  PYTHON_VERSION_NUM: # pick a version number  from https://python.org/ftp/python
  
  JAVA: # Java options: true, false
  
  MYSQL_CLIENT: # MySQL options: true, false
    
  POSTGRES_CLIENT: # Postgres options: true, false

version: 2
jobs:
  build:
    machine: true
    environment:
      <<: *image_config
        
    steps:
      - checkout
      
      - run: bash generate.sh > Dockerfile

      - store_artifacts:
          path: Dockerfile
      
      - run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      
      - run: docker build -t $DOCKER_USERNAME/$IMAGE_NAME:$IMAGE_VERSION .
      
      - run: docker push $DOCKER_USERNAME/$IMAGE_NAME:$IMAGE_VERSION
      
  test_image:
    docker:
      - image: $DOCKER_USERNAME/(name of image):(image version)
      
    steps:
      
      - checkout

      - run: lsb_release -a
      - run: node --version
      - run: ruby --version
      - run: python --version
      - run: java -version
      - run: mysql --version
      - run: psql --version
      
workflows:
  version: 2
  dockerfile_wizard:
    jobs:
      - build:
          context: org-global
          
      - test_image:
          context: org-global
          requires:
            - build