image_config: &image_config

  # make sure to set your Docker Hub username & password in CircleCI,
  # either as project-specific environment variables
  # or as resources in your organization's org-global Context

  IMAGE_NAME: new-test

  IMAGE_TAG: v1

  # NOTE: if you're modifying this config.yml file manually
  # rather than using the included setup script,
  # make sure you also add the values of your IMAGE_NAME & IMAGE_TAG variables
  # to the `test_image` job (line 58)

  LINUX_VERSION: UBUNTU_XENIAL

  RUBY_VERSION_NUM: 2.4.2

  NODE_VERSION_NUM: 8.0.0

  PYTHON_VERSION_NUM: 2.7.13

  JAVA: true

  MYSQL_CLIENT: true

  POSTGRES_CLIENT: true

  BROWSERS: true

  # NOTE: if you are modifying this config.yml file manually,
  # make sure to also comment out the accompanying `run` steps (lines 66-82)
  # in the `test_image` job for any languages/dependencies
  # that you are not installing in your Docker image

version: 2
jobs:
  build:
    machine: true
    environment:
      <<: *image_config

    steps:
      - checkout

      - run: bash generate.sh > Dockerfile

      - run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD

      - run: docker build -t $DOCKER_USERNAME/$IMAGE_NAME:$IMAGE_TAG .

      - run: docker push $DOCKER_USERNAME/$IMAGE_NAME:$IMAGE_TAG && sleep 10

      - store_artifacts:
          path: Dockerfile

  test_image:
    docker:
      - image: $DOCKER_USERNAME/new-test:v1

    steps:

      - checkout

      - run: lsb_release -a
      - run: node --version
      - run: ruby --version
      - run: python --version
      - run: java -version
      - run: mysql --version
      - run: psql --version

      - run: # phantomjs
          name: verify phantomjs
          command: Xvfb :99 -screen 0 1280x1024x24 && sleep 10
          background: true

      - run: phantomjs --version
      - run: firefox --version
      - run: google-chrome --version
      - run: chromedriver --version

workflows:
  version: 2
  dockerfile_wizard:
    jobs:
      - build:
          context: org-global

      - test_image:
          context: org-global
          requires:
            - build
